name: Sync source project branch

on:
  push:
  schedule:
  # 定时任务，在每天的0点
    - cron: '0 16 * * *'

jobs:

  sync-tags:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/checkout@v2
      with:
        repository: helm/helm
        fetch-depth: 0
        path: 'sync_project'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Available platforms
      run: echo Available platforms [${{ steps.buildx.outputs.platforms }}]

    - name: Prepare
      id: prepare
      run: |
        echo ::set-output name=image_repo::${{ secrets.DOCKER_USERNAME }}/k8s-helm
        echo ::set-output name=image_tag::${GITHUB_REF#refs/heads/}
        echo ::set-output name=platforms::linux/amd64,linux/arm64
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Runs a set of commands using the runners shell
    - name: sync
      run: |
        pwd
        ls -al
        for t in `git --git-dir ./sync_project/.git tag -l | grep "$v[0-9]*\.[0-9]*\.[0-9]*$"`
        do
          touch HELM_VERSIONS
          if [ -z "`cat HELM_VERSIONS | grep $t`" ]; then
            docker buildx build . --platform ${{ steps.prepare.outputs.platforms }} \
              -t ${{ steps.prepare.outputs.image_repo }}:${{ steps.prepare.outputs.image_tag }} \
              --build-arg HELM_LATEST_VERSION=$t \
              --push
            echo $t >> HELM_VERSIONS
            git add HELM_VERSIONS
            git commit -m "buildx image airzone/k8s-helm:$t"
            git push origin
            exit
          fi
        done
